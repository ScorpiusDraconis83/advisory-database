{
  "schema_version": "1.4.0",
  "id": "GHSA-2mfm-m7q3-xch8",
  "modified": "2025-02-14T15:31:01Z",
  "published": "2024-03-04T21:31:11Z",
  "aliases": [
    "CVE-2021-47107"
  ],
  "details": "In the Linux kernel, the following vulnerability has been resolved:\n\nNFSD: Fix READDIR buffer overflow\n\nIf a client sends a READDIR count argument that is too small (say,\nzero), then the buffer size calculation in the new init_dirlist\nhelper functions results in an underflow, allowing the XDR stream\nfunctions to write beyond the actual buffer.\n\nThis calculation has always been suspect. NFSD has never sanity-\nchecked the READDIR count argument, but the old entry encoders\nmanaged the problem correctly.\n\nWith the commits below, entry encoding changed, exposing the\nunderflow to the pointer arithmetic in xdr_reserve_space().\n\nModern NFS clients attempt to retrieve as much data as possible\nfor each READDIR request. Also, we have no unit tests that\nexercise the behavior of READDIR at the lower bound of @count\nvalues. Thus this case was missed during testing.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-47107"
    },
    {
      "type": "WEB",
      "url": "https://git.kernel.org/stable/c/53b1119a6e5028b125f431a0116ba73510d82a72"
    },
    {
      "type": "WEB",
      "url": "https://git.kernel.org/stable/c/9e291a6a28d32545ed2fd959a8165144d1724df1"
    },
    {
      "type": "WEB",
      "url": "https://git.kernel.org/stable/c/eabc0aab98e5218ceecd82069b0d6fdfff5ee885"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-120"
    ],
    "severity": "HIGH",
    "github_reviewed": false,
    "github_reviewed_at": null,
    "nvd_published_at": "2024-03-04T19:15:18Z"
  }
}