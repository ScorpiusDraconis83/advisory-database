{
  "schema_version": "1.4.0",
  "id": "GHSA-7hrf-mgqx-vhg4",
  "modified": "2024-07-03T18:42:50Z",
  "published": "2024-05-21T15:31:44Z",
  "aliases": [
    "CVE-2021-47368"
  ],
  "details": "In the Linux kernel, the following vulnerability has been resolved:\n\nenetc: Fix illegal access when reading affinity_hint\n\nirq_set_affinity_hit() stores a reference to the cpumask_t\nparameter in the irq descriptor, and that reference can be\naccessed later from irq_affinity_hint_proc_show(). Since\nthe cpu_mask parameter passed to irq_set_affinity_hit() has\nonly temporary storage (it's on the stack memory), later\naccesses to it are illegal. Thus reads from the corresponding\nprocfs affinity_hint file can result in paging request oops.\n\nThe issue is fixed by the get_cpu_mask() helper, which provides\na permanent storage for the cpumask_t parameter.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:H"
    }
  ],
  "affected": [],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-47368"
    },
    {
      "type": "WEB",
      "url": "https://git.kernel.org/stable/c/4c4c3052911b577920353a7646e4883d5da40c28"
    },
    {
      "type": "WEB",
      "url": "https://git.kernel.org/stable/c/6c3f1b741c6c2914ea120e3a5790d3e900152f7b"
    },
    {
      "type": "WEB",
      "url": "https://git.kernel.org/stable/c/6f329d9da2a5ae032fcde800a99b118124ed5270"
    },
    {
      "type": "WEB",
      "url": "https://git.kernel.org/stable/c/7237a494decfa17d0b9d0076e6cee3235719de90"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-400"
    ],
    "severity": "HIGH",
    "github_reviewed": false,
    "github_reviewed_at": null,
    "nvd_published_at": "2024-05-21T15:15:22Z"
  }
}