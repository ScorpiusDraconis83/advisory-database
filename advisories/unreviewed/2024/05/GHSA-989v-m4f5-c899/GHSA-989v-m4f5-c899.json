{
  "schema_version": "1.4.0",
  "id": "GHSA-989v-m4f5-c899",
  "modified": "2024-05-21T18:31:21Z",
  "published": "2024-05-21T18:31:21Z",
  "aliases": [
    "CVE-2023-52793"
  ],
  "details": "In the Linux kernel, the following vulnerability has been resolved:\n\nsamples/bpf: syscall_tp_user: Fix array out-of-bound access\n\nCommit 06744f24696e (\"samples/bpf: Add openat2() enter/exit tracepoint\nto syscall_tp sample\") added two more eBPF programs to support the\nopenat2() syscall. However, it did not increase the size of the array\nthat holds the corresponding bpf_links. This leads to an out-of-bound\naccess on that array in the bpf_object__for_each_program loop and could\ncorrupt other variables on the stack. On our testing QEMU, it corrupts\nthe map1_fds array and causes the sample to fail:\n\n  # ./syscall_tp\n  prog #0: map ids 4 5\n  verify map:4 val: 5\n  map_lookup failed: Bad file descriptor\n\nDynamically allocate the array based on the number of programs reported\nby libbpf to prevent similar inconsistencies in the future",
  "severity": [],
  "affected": [],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-52793"
    },
    {
      "type": "WEB",
      "url": "https://git.kernel.org/stable/c/61576b7a0f28f924da06bead92a39a6d9aa2404a"
    },
    {
      "type": "WEB",
      "url": "https://git.kernel.org/stable/c/9220c3ef6fefbf18f24aeedb1142a642b3de0596"
    },
    {
      "type": "WEB",
      "url": "https://git.kernel.org/stable/c/de4825a444560f8cb78b03dda3ba873fab88bc4f"
    }
  ],
  "database_specific": {
    "cwe_ids": [],
    "severity": null,
    "github_reviewed": false,
    "github_reviewed_at": null,
    "nvd_published_at": "2024-05-21T16:15:17Z"
  }
}