{
  "schema_version": "1.4.0",
  "id": "GHSA-6f6v-26gj-6crp",
  "modified": "2022-05-24T17:07:58Z",
  "published": "2022-05-24T17:07:58Z",
  "aliases": [
    "CVE-2020-5235"
  ],
  "details": "There is a potentially exploitable out of memory condition In Nanopb before 0.4.1, 0.3.9.5, and 0.2.9.4. When nanopb is compiled with PB_ENABLE_MALLOC, the message to be decoded contains a repeated string, bytes or message field and realloc() runs out of memory when expanding the array nanopb can end up calling `free()` on a pointer value that comes from uninitialized memory. Depending on platform this can result in a crash or further memory corruption, which may be exploitable in some cases. This problem is fixed in nanopb-0.4.1, nanopb-0.3.9.5, nanopb-0.2.9.4.",
  "severity": [],
  "affected": [],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/nanopb/nanopb/security/advisories/GHSA-gcx3-7m76-287p"
    },
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-5235"
    },
    {
      "type": "WEB",
      "url": "https://github.com/nanopb/nanopb/commit/45582f1f97f49e2abfdba1463d1e1027682d9856"
    },
    {
      "type": "WEB",
      "url": "https://github.com/nanopb/nanopb/commit/7b396821ddd06df8e39143f16e1dc0a4645b89a3"
    },
    {
      "type": "WEB",
      "url": "https://github.com/nanopb/nanopb/commit/aa9d0d1ca78d6adec3adfeecf3a706c7f9df81f2"
    }
  ],
  "database_specific": {
    "cwe_ids": [],
    "severity": "HIGH",
    "github_reviewed": false,
    "github_reviewed_at": null,
    "nvd_published_at": "2020-02-04T03:15:00Z"
  }
}