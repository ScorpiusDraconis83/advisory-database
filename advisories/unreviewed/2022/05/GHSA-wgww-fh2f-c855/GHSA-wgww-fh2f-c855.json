{
  "schema_version": "1.4.0",
  "id": "GHSA-wgww-fh2f-c855",
  "modified": "2022-05-24T17:12:59Z",
  "published": "2022-05-24T17:12:59Z",
  "aliases": [
    "CVE-2020-11105"
  ],
  "details": "An issue was discovered in USC iLab cereal through 1.3.0. It employs caching of std::shared_ptr values, using the raw pointer address as a unique identifier. This becomes problematic if an std::shared_ptr variable goes out of scope and is freed, and a new std::shared_ptr is allocated at the same address. Serialization fidelity thereby becomes dependent upon memory layout. In short, serialized std::shared_ptr variables cannot always be expected to serialize back into their original values. This can have any number of consequences, depending on the context within which this manifests.",
  "severity": [],
  "affected": [],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-11105"
    },
    {
      "type": "WEB",
      "url": "https://github.com/USCiLab/cereal/issues/636"
    }
  ],
  "database_specific": {
    "cwe_ids": [],
    "severity": "HIGH",
    "github_reviewed": false,
    "github_reviewed_at": null,
    "nvd_published_at": "2020-03-30T22:15:00Z"
  }
}